// Mocks generated by Mockito 5.4.0 from annotations
// in fuksiarz_imitation/test/source/data/repository/data_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fuksiarz_imitation/core/service/cache_status.dart' as _i6;
import 'package:fuksiarz_imitation/source/data/data_source/local_data_source.dart'
    as _i5;
import 'package:fuksiarz_imitation/source/data/data_source/remote_data_source.dart'
    as _i3;
import 'package:fuksiarz_imitation/source/data/models.dart' as _i2;
import 'package:fuksiarz_imitation/source/domain/entities_lists.dart' as _i7;
import 'package:fuksiarz_imitation/source/domain/single_entities.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEventsDataDto_0 extends _i1.SmartFake implements _i2.EventsDataDto {
  _FakeEventsDataDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuickSearchResponseDto_1 extends _i1.SmartFake
    implements _i2.QuickSearchResponseDto {
  _FakeQuickSearchResponseDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSources].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSources extends _i1.Mock implements _i3.RemoteDataSources {
  @override
  _i4.Future<_i2.EventsDataDto> getRemoteData([int? params]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRemoteData,
          [params],
        ),
        returnValue: _i4.Future<_i2.EventsDataDto>.value(_FakeEventsDataDto_0(
          this,
          Invocation.method(
            #getRemoteData,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.EventsDataDto>.value(_FakeEventsDataDto_0(
          this,
          Invocation.method(
            #getRemoteData,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.EventsDataDto>);
  @override
  _i4.Future<_i2.QuickSearchResponseDto> getQuckSearchData(String? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuckSearchData,
          [params],
        ),
        returnValue: _i4.Future<_i2.QuickSearchResponseDto>.value(
            _FakeQuickSearchResponseDto_1(
          this,
          Invocation.method(
            #getQuckSearchData,
            [params],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.QuickSearchResponseDto>.value(
            _FakeQuickSearchResponseDto_1(
          this,
          Invocation.method(
            #getQuckSearchData,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.QuickSearchResponseDto>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i5.LocalDataSource {
  @override
  _i4.Future<_i2.EventsDataDto> getLocalData([int? params]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocalData,
          [params],
        ),
        returnValue: _i4.Future<_i2.EventsDataDto>.value(_FakeEventsDataDto_0(
          this,
          Invocation.method(
            #getLocalData,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.EventsDataDto>.value(_FakeEventsDataDto_0(
          this,
          Invocation.method(
            #getLocalData,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.EventsDataDto>);
  @override
  _i4.Future<bool> cashData({
    required _i2.EventsDataDto? data,
    int? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cashData,
          [],
          {
            #data: data,
            #params: params,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [CacheStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheStatus extends _i1.Mock implements _i6.CacheStatus {
  @override
  _i4.Future<bool> isDataStored([int? param]) => (super.noSuchMethod(
        Invocation.method(
          #isDataStored,
          [param],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [EventsDataList].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockEventsDataList extends _i1.Mock implements _i7.EventsDataList {
  @override
  List<_i8.EventData> get eventData => (super.noSuchMethod(
        Invocation.getter(#eventData),
        returnValue: <_i8.EventData>[],
        returnValueForMissingStub: <_i8.EventData>[],
      ) as List<_i8.EventData>);
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
        returnValueForMissingStub: <Object?>[],
      ) as List<Object?>);
  @override
  void add(_i8.EventData? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );
}
